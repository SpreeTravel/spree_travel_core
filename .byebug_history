c
n
s
n
s
order.generate_paxes
c
line_items
line_item.context.nil?
c
e
n
line_items.first.context
line_items.count
line_items
c
exit
'hello'.index('hello')
'hello'.index('helo')
params.except('product_type')
n
params
attr_option_types
n
prefix
n
s
n
s
params
c
key
key.index(prefix)
key.index(prefix).zero?
c
key.index(prefix).zero?
c
key.index(prefix).zero?
c
key.index(prefix).zero?
key.index(prefix)
key[prefix.length + 1..-1]
c
option_types
params
c
key[prefix.length + 1..-1]
prefix
option_types
value
key
continue!
context_option_values.first.option_value
context_option_values
s
n
s
find_option_value(option_type)
s
key
n
@params
params
option_value
@option_type
@product_type.context_option_types.count
@product_type.context_option_types
c
find_option_value(option_type)
s
key
continue!
sanitize_option_types_and_values(params)
c
continue!
continue
exit
s
n
 Spree::OptionType.find(option_type) if option_type.is_a?(Integer)
s
n
s
c
option_type
c
option_type
c
option_type.is_a?(Integer)
Spree::OptionType.find(option_type) if option_type.is_a?(Integer)
s
c
context.context_option_values[1].option_value
context.context_option_values[0].option_value
context.context_option_values
@product_type.context_option_types
n
@product_type.context_option_types[0].option_values
@product_type.context_option_types
c
context_option_values[3].option_value
context_option_values[2].option_value
context_option_values[1].option_value
context_option_values[0].option_value
option_type.id
context_option_values.includes(option_value: :option_type).map { |cov| puts cov.option_value&.option_type_id }
context_option_values.includes(option_value: :option_type).find { |cov| cov.option_value&.option_type_id == option_type.id }
context_option_values
option_type
context_option_values.includes
s
find_existing_option_value(option_type)
n
s
n
s
c
context_option_values
c
context_option_values
s
n
s
find_option_value(option_type)
n
s
c
Spree::OptionType.find(option_type)
option_type.is_a?(Integer)
s
option_type
s
 find_option_value(option_type)
n
s
c
 find_option_value(option_type)
option_type
n
s
c
sanitize_option_types_and_values(params)
params
c
@context.get_temporal
@context.get_temporal_option_value('option_type_1')
@temporal
c
params
Spree::ProductType.last
Spree::ProductType.count
s
Spree::ProductType.last
Spree::ProductType.count
n
s
Spree::ProductType.find_by(name: prefix)
prefix
n
s
c
n
s
c
n
s
c
n
s
c
n
s
sanitize_option_types_and_values(params)
c
rate.rate_option_values.reload
rate.rate_option_values
c
rate_option_values.reload
rate_option_values.reload!
rate_option_values.count
Spree::RateOptionValue.count
Spree::RateOptionValue.all
Spree::RateOptionValue.where option_value_id: 4
Spree::OptionValue.find(4)
rate_option_values[-1].option_value
rate_option_values.joins("INNER JOIN spree_option_values on spree_rate_option_values.option_value_id = spree_option_values.id")
rate_option_values[-1].option_value
rate_option_values[-1]
rate_option_values
rate_option_values.joins(:option_value)
rate_option_values
rate_option_values.joins("INNER JOIN spree_option_values on spree_rate_option_values.option_value_id = spree_option_values.id")
rate_option_values.joins(:option_value)
rate_option_values
rate_option_values.joins(:option_value)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 1)
option_type
rate_option_values[1].option_value.option_type
rate_option_values[1].option_value
rate_option_values[1]
rate_option_values.where.not(date_value: nil)
rate_option_values.where(date_value: nil)
rate_option_values.where.not(date_value: nil)
rate_option_values
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 6)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 4)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 3)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 2)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 1)
Spree::OptionValue.find(1,2,3,4,6)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 3).first.option_value
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 3)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', 1)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', option_type.id)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id == ?', option_type.id)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id == ?', option_type.id).to_sql
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', option_type.id).to_sql
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', option_type.id)
option_type
option_type.id
Spree::OptionValue.find(1,2,3,4,6)
rate_option_values.pluck(:option_value_id)
rate_option_values
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', option_type.id)
rate_option_values.joins(:option_value).where('spree_option_values.option_type_id = ?', option_type.id).take
option_type
s
self.class
n
find_existing_option_value(option_type)
option_type
s
find_option_value(option_type)
n
s
c
e
n
option_type
n
s
rate.persisted_option_value('option_type_1')
rate.option_type_1
c
"Spree::#{option_type.attr_type.camelcase}OptionType".constantize.save(context_or_rate_option_value, value, option_type)
"Spree::#{option_type.attr_type.camelcase}OptionType".constantize
value
option_type
c
n
sanitize_option_types_and_values(params)
continue!
product_type.rate_option_types.first.name
product_type.rate_option_types
continue!
c
